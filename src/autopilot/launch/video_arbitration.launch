<?xml version="1.0"?>
<launch>
   <!-- launch video stream -->
   <include file="$(find video_stream_opencv)/launch/camera.launch" >
      <!-- node name and ros graph name -->
      <arg name="camera_name" value="ardrone" />
      <!-- full path to the video file -->
      <arg name="video_stream_provider" value="/home/jay/Desktop/remove/corridorVideo/basement2.mp4" />
      <!-- throttling the querying of frames to -->
      <arg name="fps" value="10" />
      <!-- setting frame_id -->
      <arg name="frame_id" value="videofile_frame" />
      <!-- camera info loading, take care as it needs the "file:///" at the start , e.g.:
      "file:///$(find your_camera_package)/config/your_camera.yaml" -->
      <arg name="camera_info_url" value="" />
      <!-- flip the image horizontally (mirror it) -->
      <arg name="flip_horizontal" value="false" />
      <!-- flip the image vertically -->
      <arg name="flip_vertical" value="false" />
      <!-- visualize on an image_view window the stream generated -->
      <arg name="visualize" value="true" />
   </include>
  
  <!-- start saving images in sloc saving location-->
  <arg name="sloc" default="/remote_images/set_online"/>
  <param name="saving_location" value="$(arg sloc)"/>
  <arg name="sloc_log" default="/home/jay/data/set_online/log.txt"/>
  <param name="saving_location_log" value="$(arg sloc_log)"/>
  
  
  <arg name="goal_angle" default="4.71"/>
  <param name="goal_angle" value="$(arg goal_angle)" type="double"/> 
  <arg name="MODE" default="0"/>
  <param name="MODE" value="$(arg MODE)"/> 
  <arg name="last_control_output" default="0"/>
  <param name="last_control_output" value="$(arg last_control_output)"/> 
  <param name="dagger_running" value="false"/>
  
  
  <param name="use_depth_estim" value="true"/>
  <param name="BA_parameters_path" value="/home/jay/autopilot_ws/src/autopilot/parameters/BehaviourArbitrationCorridorBasement.xml" />
  <param name="depth_estimation_running" value="true" />
  <arg name="port" default="55560"/>
  <param name="depth_TCP_port" value="$(arg port)" />
  
  <node name="save_labelled_images_depth_cont" pkg="autopilot" type="save_labelled_images_depth_cont" output="log"/> 
  <!-- keep evaluation for when the finish is reached-->
  <!-- <node name="online_control_cont" pkg="autopilot" type="online_control_cont" output="log" /> -->
  <node name="teleop_autopilot_evaluation" pkg="autopilot" type="teleop_autopilot_evaluation" output="log"/>
  
  <node name="teleop_autopilot_behaviour_arbitration" pkg="autopilot" type="teleop_autopilot_behaviour_arbitration" output="screen" />
  <node name="depth_estimator" pkg="autopilot" type="depth_estimator" output="screen" />
  

 <!--<node name="teleop" pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" output="screen"/>-->
<!-- <node name="rqt_gui" pkg="rqt_gui" type="rqt_gui" />-->
 <!-- JAY: Uncomment this line below if you want to launch your autopilot teleop imediately -->
  <!--<node name="teleop_autopilot_turning" pkg="teleop_autopilot" type="teleop_autopilot_turning" output="screen"/>-->
 
</launch>
