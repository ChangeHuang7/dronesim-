<?xml version="1.0"?>
<launch>
  <arg name="current_world" default="oa_challenge.world"/>
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched-->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
  <!--use line for spawning world from .dae mesh in gz model folder-->
    <arg name="world_name" value="$(find autopilot)/worlds/$(arg current_world)"/>     
  </include>

  <!-- use line for spawning environment from separate launch file-->
  <!--<include file="$(find autopilot)/launch/spawn_corridor.launch" >
    <arg name="corridor" value="$(find autopilot)/urdf/skatepark_try.urdf"/> 
  </include>-->
  
  <!-- Spawn simulated quadrotor uav -->
  <include file="$(find cvg_sim_gazebo)/launch/spawn_quadrotor.launch" >
    <arg name="model" value="$(find cvg_sim_gazebo)/urdf/quadrotor_sensors.urdf.xacro"/> 
    <arg name="y" value="-19"/><!--adjust spawning position of drone-->
  </include>
  
  <!-- start saving images in sloc saving location-->
  <arg name="sloc" default="set_online"/>
  <param name="saving_location" value="$(arg sloc)"/>
  <arg name="sloc_log" default="/home/jay/data/set_online/log.txt"/>
  <param name="saving_location_log" value="$(arg sloc_log)"/>
  
  <param name="use_depth_estim" value="true"/>
  <param name="BA_parameters_path" value="/home/jay/autopilot_ws/src/autopilot/parameters/BehaviourArbitrationOAChallenge.xml" />
  <param name="depth_estimation_running" value="true" />
  <arg name="port" default="55560"/>
  <param name="depth_TCP_port" value="$(arg port)" />
  
 <node name="save_labelled_images_depth_cont" pkg="autopilot" type="save_labelled_images_depth_cont" args="generated_set:='$(arg sloc)'" output="screen"/> 
  <!-- start the heurist for control-->
  <node name="teleop_autopilot_behaviour_arbitration" pkg="autopilot" type="teleop_autopilot_behaviour_arbitration" output="screen" />
  <node name="depth_estimator" pkg="autopilot" type="depth_estimator" />
  
 <!-- keep evaluation for when the finish is reached-->
<!-- <node name="teleop_autopilot_evaluation" pkg="teleop_autopilot" type="teleop_autopilot_evaluation" output="screen" args="log:='$(arg logfile)'"/>-->
 <node name="teleop_autopilot_evaluation" pkg="autopilot" type="teleop_autopilot_evaluation" output="screen"/>
  <!-- Spawn human -->
  <!-- <include file="$(find cvg_sim_gazebo)/launch/spawn_human.launch" >
    <arg name="human" value="$(find cvg_sim_gazebo)/urdf/human.urdf.xacro"/> 
  </include>-->

 <!--<node name="teleop" pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" output="screen"/>-->
<!-- <node name="rqt_gui" pkg="rqt_gui" type="rqt_gui" />-->
 <!-- JAY: Uncomment this line below if you want to launch your autopilot teleop imediately -->
  <!--<node name="teleop_autopilot_turning" pkg="teleop_autopilot" type="teleop_autopilot_turning" output="screen"/>-->
 
</launch>
